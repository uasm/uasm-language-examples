asm existTerm1

domain D2 of ( INTEGER ) initially { 0 , 5 , 6 }
domain D8 of ( x in INTEGER , y in INTEGER ) initially { (# 0 , 2 #) , (# 5 ,
3 #) , (# 15 , 25 #) }

derived functionder ( a in INTEGER ) -> INTEGER =
if exists b in D2 with true then
	a
else
	0
endif

rule r_skip =
skip

rule existRule =
skip

exec existRule